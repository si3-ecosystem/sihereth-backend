// const publishWebContent = async (req, res) => {
//   try {
//     const { body, user } = req;
//     if (!validateContentStructure(body)) {
//       return res.status(400).send("Invalid web content structure");
//     }
//     const error = validateWebContent(body);
//     if (error) return res.status(400).send(error);
//     const existingContent = await WebContent.findOne({ user: user._id });
//     if (existingContent) {
//       return res.status(400).send("Web content already exists for this user");
//     }
//     const templateFile = fs.readFileSync(`${__dirname}/../../template/index.ejs`);
//     const template = ejs.compile(templateFile.toString());
//     const renderedTemplate = template(body);
//     const fileBlob = new Blob([renderedTemplate], { type: "text/html" });
//     const file = new File([fileBlob], `${uuidv4()}.html`, {
//       type: "text/html",
//     });
//     const cid = await uploadToFileStorage(file);
//     const webContent = new WebContent({
//       user: user._id,
//       cid,
//       ...body,
//       isNewWebpage: true,
//     });
//     await webContent.save();
//     return res.send({
//       ...webContent.toJSON(),
//       url: `${PINATA_GATEWAY}/${webContent.cid}`,
//     });
//   } catch (error) {
//     console.error("Error creating web content:", error);
//     return res.status(500).send("Internal server error");
//   }
// };

// const publishWebContent = async (req, res) => {
//   try {
//     const { files, body, user } = req;
//     // console.log("files:", files);
//     // console.log("body:", JSON.parse(body.data));
//     // console.log("user:", user);

//     const content = JSON.parse(body.data);

//     // Handle file uploads
//     // ✅ LANDING IMAGE
//     if (files?.landing_image?.[0]) {
//       body.landing.image = files.landing_image[0].path; // Cloudinary URL
//     } else if (typeof content.landing.image === "object" && content.landing.image.url) {
//       content.landing.image = content.landing.image.url; // Fallback to existing URL in data
//     }

//     // ✅ LIVE IMAGE
//     if (files?.live_image?.[0]) {
//       body.live.image = files.live_image[0].path; // Cloudinary URL
//     } else if (typeof content.live.image === "object" && content.live.image.url) {
//       content.live.image = content.live.image.url; // Fallback to existing URL in data
//     }

//     // ✅ LIVE VIDEO
//     if (files?.live_video?.[0]) {
//       body.live.video = files.live_video[0].path; // Cloudinary URL
//     } else if (typeof content.live.video === "object" && content.live.video.url) {
//       content.live.video = content.live.video.url; // Fallback to existing URL in data
//     }

//     // ✅ ORGANIZATION IMAGES
//     const orgImages = [];
//     let index = 0;
//     while (true) {
//       const key = `org_image_${index}`;
//       if (files?.[key]?.[0]) {
//         orgImages.push(files[key][0].path); // Cloudinary URL
//       } else if (typeof content.organizations?.[index] === "string") {
//         orgImages.push(content.organizations[index]); // Fallback to existing URL
//       } else {
//         break; // No more files or org URLs
//       }
//       index++;
//     }
//     body.organizations = orgImages;

//     // Render the template with the body data
//     // const templateFile = fs.readFileSync(`${__dirname}/../../template/index.ejs`);
//     // const template = ejs.compile(templateFile.toString());
//     // const renderedTemplate = template(body);

//     // Convert to file and upload to file storage (IPFS or similar)
//     // const fileBlob = new Blob([renderedTemplate], { type: "text/html" });
//     // const file = new File([fileBlob], `${uuidv4()}.html`, {
//     //   type: "text/html",
//     // });
//     // const cid = await uploadToFileStorage(file); // Assuming this function uploads the file

//     // Create the WebContent document
//     const webContent = new WebContent({
//       user: user.id,
//       ...content,
//       isNewWebpage: false,
//     });

//     // Save to DB
//     await webContent.save();

//     // Respond with the web content and the generated URL
//     // return res.send({
//     //   ...webContent.toJSON(),
//     //   url: `${PINATA_GATEWAY}/${webContent.cid}`, // Assuming you use Pinata for file hosting
//     // });
//     return res.status(201).json({ message: "published" });
//   } catch (error) {
//     console.error("Error creating web content:", error);
//     return res.status(500).send("Internal server error");
//   }
// };

// Set up multer storage for Cloudinary